/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  admins: string[];
  denom: string;
  trust_contract: string;
  withdrawal_address: string;
}
export type ExecuteMsg = {
  update_admins: {
    admins: string[];
  };
} | {
  update_config: {
    denom: string;
    trust_contract: string;
    withdrawal_address: string;
  };
} | {
  update_marketing: {
    marketing: Marketing;
  };
} | {
  withdraw: {
    amount?: Uint128 | null;
  };
} | {
  create_listing: {
    active: boolean;
    attributes: Attributes;
    options: ListingOption[];
    price: Uint128;
  };
} | {
  update_listing: {
    active: boolean;
    attributes: Attributes;
    id: number;
    options: ListingOption[];
    price: Uint128;
  };
} | {
  delete_listing: {
    id: number;
  };
} | {
  update_order: {
    id: number;
    status: OrderStatus;
    tracking?: TrackingInfo | null;
  };
} | {
  complete_order: {
    id: number;
  };
} | {
  refund_order: {
    id: number;
  };
} | {
  create_order: {
    items: OrderItem[];
  };
} | {
  cancel_order: {
    id: number;
  };
} | {
  receive: Cw20ReceiveMsg;
};
export type Uint128 = string;
export type Network = "twitter" | "facebook" | "git_hub" | "linked_in" | "instagram" | "you_tube" | "reddit" | "medium" | "discord" | "tik_tok" | "twitch";
export type OrderStatus = "received" | "fulfilling" | "shipped";
export type Binary = string;
export interface Marketing {
  copyright?: string | null;
  featured_listings: Listing[];
  logo?: string | null;
  name: string;
  socials: Social[];
}
export interface Listing {
  active: boolean;
  attributes: Attributes;
  id: number;
  options: ListingOption[];
  price: Cw20Coin;
}
export interface Attributes {
  description?: string | null;
  images: string[];
  name: string;
}
export interface ListingOption {
  description?: string | null;
  id: number;
  name: string;
  options: ListingOptionItem[];
}
export interface ListingOptionItem {
  cost?: Cw20Coin | null;
  name: string;
}
export interface Cw20Coin {
  address: string;
  amount: Uint128;
}
export interface Social {
  network: Network;
  url: string;
}
export interface TrackingInfo {
  provider: string;
  url: string;
}
export interface OrderItem {
  amount: number;
  listing_id: number;
  options: OrderOption[];
}
export interface OrderOption {
  option_id: number;
  selected_option: ListingOptionItem;
}
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  config: {};
} | {
  admin_list: {};
} | {
  can_execute: {
    sender: string;
  };
} | {
  withdrawable_balance: {};
} | {
  locked_balance: {};
} | {
  marketing: {};
} | {
  orders: {};
} | {
  order: {
    id: number;
  };
} | {
  order_cost: {
    id: number;
  };
} | {
  listings: {};
} | {
  listing: {
    id: number;
  };
};
export interface AdminListResponse {
  admins: string[];
}
export interface CanExecuteResponse {
  can_execute: boolean;
}
export type Addr = string;
export interface ConfigResponse {
  config: Config;
}
export interface Config {
  denom: Addr;
  trust_contract: Addr;
  withdrawal_address: Addr;
}
export interface ListingResponse {
  listing?: Listing | null;
}
export interface ListingsResponse {
  listings: Listing[];
}
export interface BalanceResponse {
  balance: Cw20Coin;
}
export interface MarketingResponse {
  marketing: Marketing;
}
export interface OrderResponse {
  order?: Order | null;
}
export interface Order {
  buyer: Addr;
  id: number;
  items: OrderItem[];
  status: OrderStatus;
  tracking?: TrackingInfo | null;
}
export interface OrderCostResponse {
  cost: Uint128;
}
export interface OrdersResponse {
  orders: Order[];
}